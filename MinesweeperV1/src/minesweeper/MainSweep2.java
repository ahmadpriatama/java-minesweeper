/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MainSweep2.java
 *
 * Created on Dec 26, 2010, 12:08:20 AM
 */

package minesweeper;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Arrays;
import javax.swing.Timer;
import javax.swing.ButtonGroup;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.UIManager;

/**
 *
 * @author Ahmad
 */
public class MainSweep2 extends javax.swing.JFrame {

    private boolean isRunning = false;

    private int s = 0, m = 0, h = 0;

    private int[][] mine;
    private myJLabel[][] tombol;
    private int[][] opened;

    public Icon iconUp;
    public Icon iconDown;
    
    /** Creates new form MainSweep2 */
    public MainSweep2() {
        initComponents();

        createGame(10,10,10);

        ButtonGroup group = new ButtonGroup();
        group.add(mnBeginner);
        group.add(mnIntermediate);
        group.add(mnExpert);
        group.add(mnCustom);

        ActionListener al = new ActionListener(){
            public void actionPerformed(ActionEvent ae) {
                setDuration();
            }
        };
        new Timer(1000, al).start();
        this.isRunning = true;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnToolbar = new javax.swing.JPanel();
        txtTimes = new javax.swing.JTextField();
        btnSmile = new javax.swing.JLabel();
        txtMines = new javax.swing.JTextField();
        pnGame = new javax.swing.JPanel();
        mnBar = new javax.swing.JMenuBar();
        mnGame = new javax.swing.JMenu();
        mnNew = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        mnBeginner = new javax.swing.JRadioButtonMenuItem();
        mnIntermediate = new javax.swing.JRadioButtonMenuItem();
        mnExpert = new javax.swing.JRadioButtonMenuItem();
        mnCustom = new javax.swing.JRadioButtonMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        mnMarks = new javax.swing.JCheckBoxMenuItem();
        mnColor = new javax.swing.JCheckBoxMenuItem();
        mnSound = new javax.swing.JCheckBoxMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        mnBestTimes = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        mnExit = new javax.swing.JMenuItem();
        mnHelp = new javax.swing.JMenu();
        mnContents = new javax.swing.JMenuItem();
        mnSearchHelp = new javax.swing.JMenuItem();
        mnUsingHelp = new javax.swing.JMenuItem();
        jSeparator5 = new javax.swing.JPopupMenu.Separator();
        mnAbout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Minesweeper");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setIconImages(null);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnToolbar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 4));
        pnToolbar.setPreferredSize(new java.awt.Dimension(400, 50));

        txtTimes.setBackground(new java.awt.Color(0, 0, 0));
        txtTimes.setFont(new java.awt.Font("Digital-7", 1, 22));
        txtTimes.setForeground(new java.awt.Color(255, 0, 0));
        txtTimes.setText("000");

        btnSmile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/smiley1.png"))); // NOI18N
        btnSmile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnSmileMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnSmileMouseReleased(evt);
            }
        });

        txtMines.setBackground(new java.awt.Color(0, 0, 0));
        txtMines.setFont(new java.awt.Font("Digital-7", 1, 22));
        txtMines.setForeground(new java.awt.Color(255, 0, 0));
        txtMines.setText("010");

        javax.swing.GroupLayout pnToolbarLayout = new javax.swing.GroupLayout(pnToolbar);
        pnToolbar.setLayout(pnToolbarLayout);
        pnToolbarLayout.setHorizontalGroup(
            pnToolbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnToolbarLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(txtMines, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addComponent(btnSmile, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(txtTimes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnToolbarLayout.setVerticalGroup(
            pnToolbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnToolbarLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(pnToolbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtMines, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSmile, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTimes, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(pnToolbar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 162, -1));

        javax.swing.GroupLayout pnGameLayout = new javax.swing.GroupLayout(pnGame);
        pnGame.setLayout(pnGameLayout);
        pnGameLayout.setHorizontalGroup(
            pnGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 160, Short.MAX_VALUE)
        );
        pnGameLayout.setVerticalGroup(
            pnGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 160, Short.MAX_VALUE)
        );

        getContentPane().add(pnGame, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 160, 160));

        mnGame.setMnemonic('G');
        mnGame.setText("Game");

        mnNew.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F2, 0));
        mnNew.setText("New");
        mnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnNewActionPerformed(evt);
            }
        });
        mnGame.add(mnNew);
        mnGame.add(jSeparator1);

        mnBeginner.setMnemonic('B');
        mnBeginner.setSelected(true);
        mnBeginner.setText("Beginner");
        mnBeginner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnBeginnerActionPerformed(evt);
            }
        });
        mnGame.add(mnBeginner);

        mnIntermediate.setText("Intermediate");
        mnGame.add(mnIntermediate);

        mnExpert.setText("Expert");
        mnGame.add(mnExpert);

        mnCustom.setText("Custom...");
        mnGame.add(mnCustom);
        mnGame.add(jSeparator2);

        mnMarks.setSelected(true);
        mnMarks.setText("Marks (?)");
        mnGame.add(mnMarks);

        mnColor.setSelected(true);
        mnColor.setText("Color");
        mnGame.add(mnColor);

        mnSound.setText("Sound");
        mnGame.add(mnSound);
        mnGame.add(jSeparator3);

        mnBestTimes.setText("Best Times...");
        mnGame.add(mnBestTimes);
        mnGame.add(jSeparator4);

        mnExit.setText("Exit");
        mnGame.add(mnExit);

        mnBar.add(mnGame);

        mnHelp.setMnemonic('H');
        mnHelp.setText("Help");

        mnContents.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        mnContents.setText("Contents");
        mnHelp.add(mnContents);

        mnSearchHelp.setText("Search for Help on...");
        mnHelp.add(mnSearchHelp);

        mnUsingHelp.setText("Using Help");
        mnHelp.add(mnUsingHelp);
        mnHelp.add(jSeparator5);

        mnAbout.setText("About Minesweeper...");
        mnHelp.add(mnAbout);

        mnBar.add(mnHelp);

        setJMenuBar(mnBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnNewActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this,
                "yoi!","",JOptionPane.INFORMATION_MESSAGE);
}//GEN-LAST:event_mnNewActionPerformed

    private void mnBeginnerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnBeginnerActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_mnBeginnerActionPerformed

    private void btnSmileMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSmileMousePressed
        // TODO add your handling code here:
        btnSmile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/smiley2.png")));
    }//GEN-LAST:event_btnSmileMousePressed

    private void btnSmileMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSmileMouseReleased
        // TODO add your handling code here:
        btnSmile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/smiley1.png")));
}//GEN-LAST:event_btnSmileMouseReleased

    public void createGame(int m, int n, int nBomb){
        mine = new int[m][n];
        opened = new int[m][n];

        // generate mine
        // 9 adalah bom yah
        for (int i = 0; i < nBomb; i++) {
            int x;
            int y;
            do {
                y = (int) (m * Math.random());
                x = (int) (n * Math.random());
            } while (mine[y][x] == 9);
            mine[y][x] = 9;
        }

        int x;
        int y = 0;
        tombol = new myJLabel[m][n];
        System.out.println(Arrays.asList(tombol));


        iconUp = new javax.swing.ImageIcon(getClass().getResource("/img/label1.png"));
        iconDown = new javax.swing.ImageIcon(getClass().getResource("/img/label2.png"));
        System.out.println(iconUp);

        for (int i = 0; i < m; i++) {

            for (int j = 0; j < n; j++) {

                // cek tetangga. ada bom pa ga?
                if (mine[i][j] != 9) {
                    if (i > 0 && mine[i-1][j] == 9) mine[i][j]++;
                    if (i < (m-1) && mine[i+1][j] == 9) mine[i][j]++;
                    if (j > 0 && mine[i][j-1] == 9) mine[i][j]++;
                    if (j < (n-1) && mine[i][j+1] == 9) mine[i][j]++;

                    if (i > 0 && j > 0 && mine[i-1][j-1] == 9) mine[i][j]++;
                    if (i < (m-1) && j > 0 && mine[i+1][j-1] == 9) mine[i][j]++;
                    if (i > 0 && j < (n-1) && mine[i-1][j+1] == 9) mine[i][j]++;
                    if (i < (m-1) && j < (n-1) && mine[i+1][j+1] == 9) mine[i][j]++;
                }

                tombol[i][j] = new myJLabel(this, j, i);
                tombol[i][j].setIcon(iconUp);
                tombol[i][j].setSize(tombol[i][j].getPreferredSize());
                tombol[i][j].setLocation(j * 16, y);
                pnGame.add(tombol[i][j]);
//                System.out.print(mine[i][j] + " ");
            }

            y += 16;
//            System.out.println();
        }

        pnGame.setSize(pnGame.getPreferredSize());
        pnGame.repaint();

        MainSweep2.getFrames()[0].setSize(MainSweep2.getFrames()[0].getPreferredSize());
    }

    public void setDuration(){

        if(isRunning){
            s++;
        }
        if (s==999){
            isRunning = false;
        }

        Time t = new Time();
        TimeEntity te = t.timeFormat(s, m, h);

        if (Integer.parseInt(te.getDetik()) <= 99){
            txtTimes.setText("0" + te.getDetik());
        }else{
            txtTimes.setText(te.getDetik());
        }
    }

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        try {
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
        } catch (Exception ex){
            ex.printStackTrace();
        }

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainSweep2().setVisible(true);
            }
        });
    }

    public void open(int x, int y) {
        if (opened[y][x] == 1)
            return;
        else
            opened[y][x] = 1;
        if (mine[y][x] == 9) {
            for (int i = 0; i < mine.length; i++){
                for (int j = 0; j < mine[i].length; j++) {
                    if (mine[i][j] == 9) tombol[i][j].setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/bomb.JPG")));
                }
            }
        } else if (mine[y][x] != 0){
            tombol[y][x].setIcon(null);
            tombol[y][x].setText(""+mine[y][x]);
        } else {
            tombol[y][x].setIcon(null);
            if (y > 0 && mine[y-1][x] == 0) open(x,y-1);
            if (y < (m-1) && mine[y+1][x] == 0) open(x,y+1);
            if (x > 0 && mine[y][x-1] == 0) open(x-1,y);
            if (x < (mine[0].length-1) && mine[y][x+1] == 0) open(x+1,y);

            if (y > 0 && x > 0 && mine[y-1][x-1] == 0) open(x-1,y-1);
            if (y < (mine.length-1) && x > 0 && mine[y+1][x-1] == 0) open(x-1,y+1);
            if (y > 0 && x < (mine[0].length-1) && mine[y-1][x+1] == 0) open(x+1,y-1);
            if (y < (mine.length-1) && x < (mine[0].length-1) && mine[y+1][x+1] == 0) open(x+1,y+1);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnSmile;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JPopupMenu.Separator jSeparator5;
    private javax.swing.JMenuItem mnAbout;
    private javax.swing.JMenuBar mnBar;
    private javax.swing.JRadioButtonMenuItem mnBeginner;
    private javax.swing.JMenuItem mnBestTimes;
    private javax.swing.JCheckBoxMenuItem mnColor;
    private javax.swing.JMenuItem mnContents;
    private javax.swing.JRadioButtonMenuItem mnCustom;
    private javax.swing.JMenuItem mnExit;
    private javax.swing.JRadioButtonMenuItem mnExpert;
    private javax.swing.JMenu mnGame;
    private javax.swing.JMenu mnHelp;
    private javax.swing.JRadioButtonMenuItem mnIntermediate;
    private javax.swing.JCheckBoxMenuItem mnMarks;
    private javax.swing.JMenuItem mnNew;
    private javax.swing.JMenuItem mnSearchHelp;
    private javax.swing.JCheckBoxMenuItem mnSound;
    private javax.swing.JMenuItem mnUsingHelp;
    private javax.swing.JPanel pnGame;
    private javax.swing.JPanel pnToolbar;
    private javax.swing.JTextField txtMines;
    private javax.swing.JTextField txtTimes;
    // End of variables declaration//GEN-END:variables

}
